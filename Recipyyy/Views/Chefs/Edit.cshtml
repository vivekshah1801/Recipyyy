@model Recipyyy.Models.Chef

@{
    ViewBag.Title = "Edit";
}


@using (Html.BeginForm("Edit", "Chefs", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal container col-md-8">
        <h4>Chef</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.chefId)

        <div class="form-group">
            @Html.LabelFor(model => model.chefName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.chefName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.chefName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.chefBio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.chefBio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.chefBio, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-12  pt-2" >
                <div class="checkbox">
                    @Html.EditorFor(model => model.chefTipsEnable)
                    @Html.LabelFor(model => model.chefTipsEnable, htmlAttributes: new { @class = "control-label" })
                    @Html.ValidationMessageFor(model => model.chefTipsEnable, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group" style="padding-left:15px;padding-right:15px;">
            <label>Edit user photo</label>
            <div class="col-md-12">
                <input class="custom-file-input" type="file" name="chefImageFile" />
                <label class="custom-file-label" for="customFile">Choose file</label>
                @Html.ValidationMessageFor(model => model.chefImagePath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Save" class="btn btn-outline-primary btn-block" />
            </div>
        </div>

        <div class="pl-3 pb-3">
            @Html.ActionLink("Back " , "Index", null , new { @class= "btn btn-secondary" })
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
